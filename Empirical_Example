rm(list=ls())
library(GEVStableGarch)
library(stable)
h=40
x<-read.csv("AAPL.csv");com1<-x[,7]
n1<-length(com1)
d1<-0
for (i in 1:(n1-1)){
d1[i]<-log(com1[i+1]/com1[i])
}
#Auxiliary variable: AMZN
x<-read.csv("AMZN.csv");com11<-x[,7]
n2<-length(com11)
d2<-0
for (i in 1:(n2-1)){
d2[i]<-log(com11[i+1]/com11[i])
}
d1hat=0;d2hat=0
for (h1 in 1:h){
fit1<-gsFit(data=d1[1:(n1-1-h+h1-1)],formula=~garch(1,1),cond.dist ="stableS1",algorithm="sqp.restriction",include.mean=F)
p<-1
epsilon1<-fit1@sigma.t
par1<-fit1@fit$par
res1<-(d1[1:(n1-1-h+h1-1)]-0)/epsilon1

fit2<-gsFit(data=d2[1:(n2-1-h+h1)],formula=~garch(1,1),cond.dist ="stableS1",algorithm="sqp.restriction",include.mean=F)
p<-1
epsilon2<-fit2@sigma.t
par2<-fit2@fit$par
res2<-(d2[1:(n2-1-h+h1)]-0)/epsilon2

n=min(length(res1),length(res2))
c2=res1[1:n];c1=res2[1:n]
m1<-matrix(c(c1,c2),nrow=2, byrow=T)
fit1<-mvstable.fit(m1, nspectral=40, method1d=1, method2d=2, param=1)
spec1<-fit1$lambda
angle1<-fit1$angle
alpha1<-fit1$alpha
eta<-0;sigma<-0;delta<-0;beta=0
for (i in 1:40){
eta[i]<-abs(cos(angle1[i]))^(alpha1-1)*sign(angle1[i])*sin(angle1[i])*spec1[i]
sigma[i]<-abs(cos(angle1[i]))^alpha1*spec1[i]
delta[i]<-abs(cos(angle1[i]))^(alpha1-1)*sin(angle1[i])*spec1[i]
beta[i]<-abs(cos(angle1[i]))^alpha1*sign(cos(angle1[i]))*spec1[i]
}
q=tan(pi*alpha1/2);sigma1=1
#sigma1=sum(sigma);beta1=sum(beta)/sum(sigma)
beta1=par2[4+0]
delta1=sum(delta)/sum(sigma)
n11=n1-1-h+h1-1;epsilon1h=0
epsilon1h[1]=par1[1+0]+par1[3+0]*epsilon1[n11]+par1[2+0]*abs(d1[n11])
j=1
integrand <- function(x) {exp(-sigma1*x^alpha1)*sin(x*res2[n11+j]-q*beta1*sigma1*x^alpha1)}
int1=integrate(integrand, lower = 0, upper = Inf)
Dx=int1$value

integrand <- function(x) {1/pi*exp(-sigma1*x^alpha1)*cos(x*res2[n11+j]-q*beta1*sigma1*x^alpha1)}
int2=integrate(integrand, lower = 0, upper = Inf)
fx=int2$value

q11=q*(delta1-beta1*sum(eta))/(1+q^2*beta1^2)*(q*beta1*res2[n11+j]+(1-res2[n11+j]*Dx)/(pi*fx))
d1hat[h1]=0+epsilon1h[j]*(sum(eta)/sum(sigma)*res2[n11+j]+q11)
d2hat[h1]=0
}
y1=min(d1hat,d1[(n1-1-h+1):(n1-1)])
y2=max(d1hat,d1[(n1-1-h+1):(n1-1)])
plot(d1hat,type="l",lty=1,ylab(TeX(r'($R^(AAPL)$)')),main="Auxiliary: AMZN",ylim=c(y1,y2),xlab="Prediction step",cex.axis=1,cex.main=1.5,cex=1)
lines(d1[(n1-1-h+1):(n1-1)],type="l",lty=2)
#lines(d2hat,lty=3)
#plot(d2hat,type="l",lty=1,ylab="Apple",main="Without auxiliary",xlab="Prediction step",cex.axis=1,cex.main=1.5,cex=1)

